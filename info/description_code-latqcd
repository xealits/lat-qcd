А теперь описание пакета. Это довольно общая информация "что где лежит". Оно вам может и не пригодится, если использовать Стасову C# программу. Но текст пусть где-то будет.

В главной папке (для обозначения буду использовать / ) содержиться 2 папке и README.md файл:
/code/
/info/
/README.md

В readme и info/ особо ничего полезного нет (хотя, по-хорошему, там должна быть информация о чём эти программы и как это всё запустить). Разве что, в /info/dependencies записаны те пакеты, которые нужны для запуска моих программ. (Я помещу это письмо в readme или где-то в info/)

Все программы собраны в /code/

/code/istaslis-latqcd  --  Стасова папка, он запускает OpenCL программы из C# ("си-шарп"), я про это знаю мало чего конкретного.

/code/latqcd  -- моя папка, в ней OpenCL запускается из Python. Сами OpenCL-программы у нас одинаковые, может попасться всего пару отличий. А запускаются они из разных систем. (Могу порекламировать Python: это простой, хороший язык и много его программистов тоже неплохие люди:))

Папка /code/latqcd/ содержит три папки с программками для разных целей и пустой файл "__init__.py". (Для python этот файл нужен для организационных целей, он позволяет программкам "видеть" друг друга и тогда можно вызывать одну из другой и прочее.)

.../latqcd/kernels_and_cover/ -- "вычислительная" папка, в ней находятся программы OpenCL (это файлы с расширением .cl) и python-программы для вызова последних (расширение .py). В результате эти питоновские программы создают QCD-решётку на устройстве, с которым работает OpenCL (процессор или видеокарта), запускают процедуру симуляции глюодинамики (или г-динамика+фермионы). Процедура симуляции делает 1 шаг симуляции -- обновляет все поля на решётке 1 раз. И есть программы, собирают результат с решётки (делают reduction, как говорят) и возвращают его пользователю. И никуда эти результаты здесь не сохраняются.

.../latqcd/tasker/   --  программы для запуска серий вычислений и сохранения результатов. Они запускают вычислительные процедуры в сериях вида:
С-С-Р-С-С-Р или для термолизации С-С-С-С-С,
где симуляция -- С, счёт результата -- Р. Считанный результат сохраняется в специальную структуру, которая в конце такой серии записывается в файл. В одной серии, конечно, параметры решётки (бета, поток, размеры) одни и теже. (Там же просто создаётся решётка и вся серия вычислений проходит на неё.) Можно запустить несколько таких серий подряд, с разными параметрами бета, кол-во ячеек, поток и пр.

.../latqcd/drawer/  -- программы-рисовалки (используют графопостроительный пакет Matplotlib)
